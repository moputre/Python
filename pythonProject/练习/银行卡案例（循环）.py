# 案例：模拟银行ATM存款取款

# 1.模拟3张银行卡,1001,1002,1003,分别设置密码和余额(使用列表嵌套字典的方式)；

# 2.提示用户输入银行卡和密码，遍历每张卡的信息验证是否成功；


# 3.如果用户输入正确---提示让用户选择取款.存款还是退出,并提示余额多少.  输入错误---重新输入卡号密码；

# 选择取款---提示输入取款额度,如果超过余额,提示余额不足;否则,在余额上减掉相应金额；

# 选择存款---输入存款额度,余额加上相应额度,并提示余额多少；

# 选择退出---重新登录；

# 4.设置3次输入错误账号密码,提示银行卡已被锁定，程序结束。

card1 = {'姓名': '张三', '卡号': '1001', '密码': 123, '余额': 10000}
card2 = {'姓名': '李四', '卡号': '1002', '密码': 123123, '余额': 10000}
card3 = {'姓名': '王五', '卡号': '1003', '密码': 123789, '余额': 10000}
card4 = {'姓名': '赵六', '卡号': '1004', '密码': 123456, '余额': 10000}
lista = [card1, card2, card3, card4]
false = 0
while 1 == 1:
    name = input('请输入你的卡号：')
    num = int(input('请输入你的密码：'))
    msg = 0  # 用msg表示登录状态，若为0则未登录，为1则为登录
    for card in lista:
        if name == card['卡号'] and num == card['密码']:
            msg = 1
            false = 0
            print('恭喜你！', card['姓名'], '登录成功！')
    if msg == 0:
        false += 1
        if false == 3:
            print('您已经连续输入错误三次，银行卡已被锁定！')
            break
        else:
            print('不好意思，你已经连续', false, '次输入错误，还有', 3 - false, '次银行卡将会被锁定！')
            continue
    while 2 == 2:
        w = int(input('请输入你想要办理的业务：1.存款 2.取款 3.退出：'))
        if w == 1:
            print('你的存款还有', card['余额'], '元!')
            cun = float(input('请输入你需要存款多少：'))
            if cun <= 0:
                print('不好意思，请重新存款！')
                continue
            for card in lista:
                if name == card['卡号']:
                    card['余额'] += cun
                    print('存款了', cun, '元！', '您的存款为', card['余额'], '元！')
        elif w == 2:
            print('你的存款还有', card['余额'], '元!')
            qu = float(input('请输入你需要取款多少：'))
            if qu <= 0 or qu > card['余额']:
                print('不好意思，请重新取款！')
                continue
            for card in lista:
                card['余额'] = card['余额'] - qu
            print('取款了', qu, '元！', '您的取款为', card['余额'], '元！')
        elif w == 3:
            print('--------已退出------------')
            break
        else:
            print('您所选择的业务不在服务范畴内，请重新选择业务！')
            continue
